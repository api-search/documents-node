openapi: 3.1.0
info:
  title: Box Folders API
paths:
  /folders/{folder_id}:
    get:
      summary: Get folder information
      tags:
        - Get
        - Folder
        - Information
        - Folders
        - Folder_id
      description: |-
        Retrieves details for a folder, including the first 100 entries
        in the folder.

        Passing `sort`, `direction`, `offset`, and `limit`
        parameters in query allows you to manage the
        list of returned
        [folder items](r://folder--full#param-item-collection).

        To fetch more items within the folder, use the
        [Get items in a folder](e://get-folders-id-items) endpoint.
    post:
      summary: Restore folder
      tags:
        - Restore
        - Folder
        - Folders
        - Folder_id
      description: >-
        Restores a folder that has been moved to the trash.


        An optional new parent ID can be provided to restore the folder to in
        case the

        original folder has been deleted.


        # Folder locking


        During this operation, part of the file tree will be locked, mainly

        the source folder and all of its descendants, as well as the destination

        folder.


        For the duration of the operation, no other move, copy, delete, or
        restore

        operation can performed on any of the locked folders.
    put:
      summary: Update folder
      description: |-
        Updates a folder. This can be also be used to move the folder,
        create shared links, update collaborations, and more.
      tags:
        - Update
        - Folder
        - Folders
        - Folder_id
    delete:
      summary: Delete folder
      description: |-
        Deletes a folder, either permanently or by moving it to
        the trash.
      tags:
        - Delete
        - Folder
        - Folders
        - Folder_id
  /folders/{folder_id}/items:
    get:
      summary: List items in folder
      tags:
        - List
        - Items
        - In
        - Folder
        - Folders
        - Folder_id
        - Items
      description: |-
        Retrieves a page of items in a folder. These items can be files,
        folders, and web links.

        To request more information about the folder itself, like its size,
        use the [Get a folder](#get-folders-id) endpoint instead.
  /folders:
    post:
      summary: Create folder
      tags:
        - Create
        - Folder
        - Folders
        - Folder_id
        - Items
      description: Creates a new empty folder within the specified parent folder.
  /folders/{folder_id}/copy:
    post:
      summary: Copy folder
      description: |-
        Creates a copy of a folder within a destination folder.

        The original folder will not be changed.
      tags:
        - Copy
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
  /folders/{folder_id}/collaborations:
    get:
      summary: List folder collaborations
      description: |-
        Retrieves a list of pending and active collaborations for a
        folder. This returns all the users that have access to the folder
        or have been invited to the folder.
      tags:
        - List
        - Folder
        - Collaborations
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
  /folders/{folder_id}/trash:
    get:
      summary: Get trashed folder
      tags:
        - Get
        - Trashed
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
      description: |-
        Retrieves a folder that has been moved to the trash.

        Please note that only if the folder itself has been moved to the
        trash can it be retrieved with this API call. If instead one of
        its parent folders was moved to the trash, only that folder
        can be inspected using the
        [`GET /folders/:id/trash`](e://get_folders_id_trash) API.

        To list all items that have been moved to the trash, please
        use the [`GET /folders/trash/items`](e://get-folders-trash-items/)
        API.
    delete:
      summary: Permanently remove folder
      tags:
        - Permanently
        - Remove
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
      description: |-
        Permanently deletes a folder that is in the trash.
        This action cannot be undone.
  /folders/{folder_id}/metadata:
    get:
      summary: List metadata instances on folder
      tags:
        - List
        - Metadata
        - Instances
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
      description: >-
        Retrieves all metadata for a given folder. This can not be used on the
        root

        folder with ID `0`.
  /folders/{folder_id}/metadata/enterprise/securityClassification-6VMVochwUWo:
    get:
      summary: Get classification on folder
      tags:
        - Get
        - Classification
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
      description: |-
        Retrieves the classification metadata instance that
        has been applied to a folder.

        This API can also be called by including the enterprise ID in the
        URL explicitly, for example
        `/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    post:
      summary: Add classification to folder
      tags:
        - Add
        - Classification
        - To
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
      description: |-
        Adds a classification to a folder by specifying the label of the
        classification to add.

        This API can also be called by including the enterprise ID in the
        URL explicitly, for example
        `/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
    put:
      summary: Update classification on folder
      tags:
        - Update
        - Classification
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
      description: >-
        Updates a classification on a folder.


        The classification can only be updated if a classification has already
        been

        applied to the folder before. When editing classifications, only values
        are

        defined for the enterprise will be accepted.
    delete:
      summary: Remove classification from folder
      tags:
        - Remove
        - Classification
        - From
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
      description: |-
        Removes any classifications from a folder.

        This API can also be called by including the enterprise ID in the
        URL explicitly, for example
        `/folders/:id//enterprise_12345/securityClassification-6VMVochwUWo`.
  /folders/{folder_id}/metadata/{scope}/{template_key}:
    get:
      summary: Get metadata instance on folder
      tags:
        - Get
        - Metadata
        - Instance
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
      description: |-
        Retrieves the instance of a metadata template that has been applied to a
        folder. This can not be used on the root folder with ID `0`.
    post:
      summary: Create metadata instance on folder
      tags:
        - Create
        - Metadata
        - Instance
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
      description: >-
        Applies an instance of a metadata template to a folder.


        In most cases only values that are present in the metadata template

        will be accepted, except for the `global.properties` template which
        accepts

        any key-value pair.


        To display the metadata template in the Box web app the enterprise needs
        to be

        configured to enable **Cascading Folder Level Metadata** for the user in
        the

        admin console.
    put:
      summary: Update metadata instance on folder
      tags:
        - Update
        - Metadata
        - Instance
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
      description: >-
        Updates a piece of metadata on a folder.


        The metadata instance can only be updated if the template has already
        been

        applied to the folder before. When editing metadata, only values that
        match

        the metadata template schema will be accepted.


        The update is applied atomically. If any errors occur during the

        application of the operations, the metadata instance will not be
        changed.
    delete:
      summary: Remove metadata instance from folder
      tags:
        - Remove
        - Metadata
        - Instance
        - From
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
      description: Deletes a piece of folder metadata.
  /folders/trash/items:
    get:
      summary: List trashed items
      tags:
        - List
        - Trashed
        - Items
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
      description: |-
        Retrieves the files and folders that have been moved
        to the trash.

        Any attribute in the full files or folders objects can be passed
        in with the `fields` parameter to retrieve those specific
        attributes that are not returned by default.

        This endpoint defaults to use offset-based pagination, yet also supports
        marker-based pagination using the `marker` parameter.
  /folders/{folder_id}/watermark:
    get:
      summary: Get watermark for folder
      tags:
        - Get
        - Watermark
        - For
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
      description: Retrieve the watermark for a folder.
    put:
      summary: Apply watermark to folder
      tags:
        - Apply
        - Watermark
        - To
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
      description: Applies or update a watermark on a folder.
    delete:
      summary: Remove watermark from folder
      tags:
        - Remove
        - Watermark
        - From
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
      description: Removes the watermark from a folder.
  /folders/{folder_id}#get_shared_link:
    get:
      summary: Get shared link for folder
      tags:
        - Get
        - Shared
        - Link
        - For
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
        - '#get_shared_link'
      description: Gets the information for a shared link on a folder.
  /folders/{folder_id}#add_shared_link:
    put:
      summary: Add shared link to folder
      tags:
        - Add
        - Shared
        - Link
        - To
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
        - '#get_shared_link'
        - '#add_shared_link'
      description: Adds a shared link to a folder.
  /folders/{folder_id}#update_shared_link:
    put:
      summary: Update shared link on folder
      tags:
        - Update
        - Shared
        - Link
        - 'On'
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
        - '#get_shared_link'
        - '#add_shared_link'
        - '#update_shared_link'
      description: Updates a shared link on a folder.
  /folders/{folder_id}#remove_shared_link:
    put:
      summary: Remove shared link from folder
      tags:
        - Remove
        - Shared
        - Link
        - From
        - Folder
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
        - '#get_shared_link'
        - '#add_shared_link'
        - '#update_shared_link'
        - '#remove_shared_link'
      description: Removes a shared link from a folder.
  /users/{user_id}/folders/0:
    put:
      summary: Transfer owned folders
      tags:
        - Transfer
        - Owned
        - Folders
        - Folders
        - Folder_id
        - Items
        - Copy
        - Collaborations
        - Trash
        - Metadata
        - Classification
        - Vochw
        - Wo
        - Scope
        - Template_key
        - Watermark
        - '#get_shared_link'
        - '#add_shared_link'
        - '#update_shared_link'
        - '#remove_shared_link'
        - Users
        - User_id
      description: >-
        Move all of the items (files, folders and workflows) owned by a user
        into

        another user's account


        Only the root folder (`0`) can be transferred.


        Folders can only be moved across users by users with administrative

        permissions.


        All existing shared links and folder-level collaborations are
        transferred

        during the operation. Please note that while collaborations at the
        individual

        file-level are transferred during the operation, the collaborations are

        deleted when the original user is deleted.


        This call will be performed synchronously which might lead to a slow
        response

        when the source user has a large number of items in all of its folders.


        If the destination path has a metadata cascade policy attached to any of

        the parent folders, a metadata cascade operation will be kicked off

        asynchronously.


        There is currently no way to check for when this operation is finished.


        The destination folder's name will be in the format `{User}'s Files and

        Folders`, where `{User}` is the display name of the user.


        To make this API call your application will need to have the "Read and
        write

        all files and folders stored in Box" scope enabled.


        Please make sure the destination user has access to `Relay` or `Relay
        Lite`,

        and has access to the files and folders involved in the workflows being

        transferred.


        Admins will receive an email when the operation i
